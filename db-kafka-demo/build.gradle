import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask
plugins {
    id 'java'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
}

group = 'org.smee'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

avro {
    setCreateSetters(true)
}

dependencies {
    implementation project(":common")

    implementation 'io.debezium:debezium-api:2.5.0.Final'
    implementation 'io.debezium:debezium-embedded:2.5.0.Final'
    implementation "io.debezium:debezium-connector-postgres:2.5.0.Final"
    implementation "io.confluent:kafka-avro-serializer:7.9.2"
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.mongodb:mongodb-driver-sync:5.2.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("build/generated-main-avro-avsc")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}

sourceSets {
    main {
        java {
            srcDirs += ["build/generated-main-avro-avsc"]
        }
    }
}
test {
    useJUnitPlatform()
}